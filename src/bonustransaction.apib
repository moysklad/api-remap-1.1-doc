# Group Бонусная операция
## Бонусные операции [/entity/bonustransaction]
Средствами JSON API можно создавать и обновлять сведения о Бонусных операциях, запрашивать списки Бонусных операций и сведения по отдельным Бонусым операциям. Кодом сущности для Бонусной операции в составе JSON API является ключевое слово **bonustransaction**.

### Атрибуты сущности
+ **meta** - [Метаданные](/api/remap/1.1/doc/index.html#header-метаданные) бонусной операции
+ **id** - ID в формате UUID `Только для чтения`
+ **accountId** - ID учетной записи `Только для чтения`
+ **owner** - Ссылка на Владельца (Сотрудника) в формате [Метаданных](/api/remap/1.1/doc/index.html#header-метаданные)
+ **shared** - Общий доступ
+ **updated** - Момент последнего обновления Бонусной операции
+ **created** - Момент создания Бонусной операции
+ **group** - Отдел сотрудника в формате [Метаданных](/api/remap/1.1/doc/index.html#header-метаданные)
+ **externalCode** - Внешний код Бонусной операции
+ **name** - Наименование бонусной операции
+ **applicable** - Отметка о проведении
+ **moment** - Время проведения бонусной операции
+ **agent** - Контрагент, связанный с бонусной операцией в формате [Метаданных](/api/remap/1.1/doc/index.html#header-метаданные) `Необходимое`
+ **parentDocument** - Связанный документ бонусной операции в формате [Метаданных](/api/remap/1.1/doc/index.html#header-метаданные)
+ **bonusProgram** - Бонусная программа в формате [Метаданных](/api/remap/1.1/doc/index.html#header-метаданные)
+ **bonusValue** - Количество бонусных баллов
+ **organization** - ссылка на ваше юрлицо в формате [Метаданных](/api/remap/1.1/doc/index.html#header-метаданные)
+ **transactionType** - Тип бонусной операции. Возможные значения: `EARNING`, `SPENDING`. `Необходимое`

### Атрибуты доступные для фильтрации
+ **id** - ID в формате UUID
+ **moment** - Момент создания бонусной операции
+ **updated** - Момент последнего обновления бонусной операции
+ **updatedBy** - Автор последнего обновления бонусной операции в формате `uid` (`admin@admin`)
+ **agent** - Ссылка на контрагента в формате [Метаданных](/api/remap/1.1/doc/index.html#header-метаданные)
+ **bonusProgram** - Ссылка на бонусную программу в формате [Метаданных](/api/remap/1.1/doc/index.html#header-метаданные)
+ **bonusValue** - Бонусные баллы

### Получить Бонусные операции [GET]
Запрос на получения списка всех Бонусных операций для данной учётной записи.
Результат: Объект JSON, включающий в себя поля:
- **meta** [Метаданные](/api/remap/1.1/doc/index.html#header-метаданные) о выдаче,
- **context** - [Метаданные](/api/remap/1.1/doc/index.html#header-метаданные) о сотруднике, выполнившем запрос.
- **rows** - Массив JSON объектов, представляющих собой Бонусные операции.

+ Parameters
  + limit: 1000 (optional, enum[number])
  Максимальное количество сущностей для извлечения.
  <p>
    <code>Допустимые значения 1 - 1000</code>
  </p>
      + Default: `1000`
  + offset: 40 (optional, number)
    Отступ в выдаваемом списке сущностей
      + Default: `0`

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление списка Бонусных операций.
  + Body
        <!-- include(body/bonustransaction/get_list.json) -->

### Создать Бонусную операцию [POST]
Запрос на создание новой бонусной операции на данной учётной записи.
+ Request Пример (application/json)
Пример запроса на создание новой бонусной операции.
  + Body
        <!-- include(body/bonustransaction/post_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданной бонусной операции.
  + Body
        <!-- include(body/bonustransaction/post_response.json) -->

### Массовое создание и обновление Бонусных операций [POST]
[Массовое создание и обновление](/api/remap/1.1/doc/index.html#header-создание-и-обновление-нескольких-объектов) Бонусных операций.
В теле запроса нужно передать массив, содержащий JSON представления Бонусных операций, которые вы хотите создать или обновить.
Обновляемые Бонусные операции должны содержать идентификатор в виде метаданных.

+ Request Пример (application/json)
Пример создания и обновления нескольких Бонусных операций
  + Body
        <!-- include(body/bonustransaction/post_massive_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - массив JSON представлений созданных и обновленных Бонусных операций.
  + Body
        <!-- include(body/bonustransaction/post_massive_response.json) -->

### Удалить Бонусную операцию [DELETE /entity/bonustransaction/{id}]
Запрос на удаление бонусной операции.
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Бонусной операции

+ Response 200 (application/json)
Успешное удаление Бонусной операции.
+ Body

## Бонусная операция [/entity/bonustransaction/{id}]
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Бонусной операции

## Получить Бонусную операцию [GET]
Запрос на получение бонусной операции с указанным id.
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление Бонусной операции с указанным id.
  + Body
        <!-- include(body/bonustransaction/get_by_id.json) -->

## Изменить Бонусную операцию [PUT]
Запрос на изменение объекта, представляющего собой бонусную операцию. Невозможно изменение типа бонусной операции.

+ Request Пример (application/json)
Пример запроса на обновление Бонусной операции.
  + Body
        <!-- include(body/bonustransaction/put_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление обновлённой Бонусной операции.
  + Body
        <!-- include(body/bonustransaction/put_response.json) -->
