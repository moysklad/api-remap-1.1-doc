# Group Проект
## Проекты [/entity/project]
Средствами JSON API можно создавать и обновлять сведения о Проектах, запрашивать списки Проектов и сведения по отдельным Проектам. Кодом сущности для Проекта в составе JSON API является ключевое слово **project**. Больше о Проектах и работе с ними в основном интерфейсе вы можете прочитать в нашей службе поддержки по [этой ссылке](https://support.moysklad.ru/hc/ru/articles/205529477-%D0%9F%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D1%8B).
По данной сущности можно осуществлять контекстный поиск с помощью специального параметра `search`. Подробнее можно узнать по [ссылке](#header-контекстный-поиск). Поиск с параметром search отличается от других тем, что поиск не префиксный, без токенизации и идет только по одному полю одновременно. Ищет такие строки, в которые входит значение строки поиска.

Поиск среди объектов проекта на соответствие поисковой строке будет осуществлён по следующим полям:
+ по наименованию Проекта **name**
+ по описанию Проекта **description**

### Атрибуты сущности
+ **meta** - [Метаданные](#header-метаданные) о Проекте
+ **id** - ID в формате UUID `Только для чтения`
+ **accountId** - ID учетной записи `Только для чтения`
+ **owner** - Ссылка на Владельца (Сотрудника) в формате [Метаданных](#header-метаданные)
+ **shared** - Общий доступ
+ **group** - Отдел сотрудника в формате [Метаданных](#header-метаданные)
+ **version** - Версия сущности `Только для чтения`
+ **updated** - Момент последнего обновления сущности `Только для чтения`
+ **name** - Наименование Проекта `Необходимое`
+ **description** - Описание Проекта
+ **code** - Код Проекта
+ **externalCode** - Внешний код Проекта
+ **archived** - Добавлен ли Проект в архив
+ **attributes** - Коллекция доп. полей в формате [Метаданных](#header-метаданные)

О работе с доп. полями Проектов можно прочитать [здесь](#header-работа-с-дополнительными-полями)

### Атрибуты доступные для фильтрации
+ **id** - ID в формате UUID
+ **owner** - Ссылка на Владельца (Сотрудника)
+ **shared** - Общий доступ
+ **group** - Отдел сотрудника
+ **version** - Версия сущности
+ **updated** - Момент последнего обновления сущности
+ **updatedBy** - Автор последнего обновления сущности в формате `uid` (`admin@admin`)
+ **name** - Наименование Проекта
+ **description** - Описание Проекта
+ **code** - Код Проекта
+ **externalCode** - Внешний код Проекта
+ **archived** - Добавлен ли Проект в архив

### Атрибуты доступные для сортировки
+ **id** - ID в формате UUID
+ **version** - Версия сущности
+ **updated** - Момент последнего обновления сущности
+ **name** - Наименование Проекта
+ **externalCode** - Внешний код Проекта
+ **archived** - Добавлен ли Проект в архив

### Получить Проекты [GET]
Запрос на получение списка всех проектов на данной учётной записи.
Результат: Объект JSON, включающий в себя поля:
- **meta** [Метаданные](#header-метаданные) о выдаче,
- **context** - [Метаданные](#header-метаданные) о сотруднике, выполнившем запрос.
- **rows** - Массив JSON объектов, представляющих собой проекты.
+ Parameters
  + limit: 100 (optional, enum[number])
  Максимальное количество сущностей для извлечения.
  <p>
    <code>Допустимые значения 1 - 100</code>
  </p>
      + Default: `25`
  + offset: 40 (optional, number)
    Отступ в выдаваемом списке сущностей
      + Default: `0`

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление списка проектов.
  + Body
        <!-- include(body/project/get_list.json) -->


### Создать Проект [POST]
Запрос на создание нового проекта. Единственным необходимым полем в теле запроса
для создания проекта является **name**.

+ Request Пример (application/json)
Пример запроса на создание нового проекта.
  + Body
        <!-- include(body/project/post_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного проекта.
  + Body
        <!-- include(body/project/post_response.json) -->

+ Request Пример с доп полями (application/json)
Пример запроса на создание нового проекта с доп. полями в теле запроса.
  + Body
        <!-- include(body/project/post_with_attributes_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного проекта.
  + Body
        <!-- include(body/project/post_with_attributes_response.json) -->

### Удалить Проект [DELETE /entity/project/{id}]
Запрос на удаление Проекта с указанным id.
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Проекта

+ Response 200 (application/json)
Успешное удаление Проекта.
  + Body

## Метаданные Проектов [/entity/project/metadata]
### Метаданные Проектов [GET]
Запрос на получение метаданных Проектов. Результат - объект JSON, включающий в себя:
+ **meta** - Ссылка на метаданные Проектов
+ **attributes** - Массив объектов доп. полей Проектов в формате [Метаданных](#header-метаданные)
+ **createShared** - создавать новые Проекты с меткой "Общий"

Структура отдельного объекта, представляющего доп. поле подробно описана в разделе [Работа с дополнительными полями](#header-работа-с-дополнительными-полями).

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление доп. полей Проектов.
  + Body
        <!-- include(body/project/get_metadata.json) -->

## Отдельное доп. поле [/entity/project/metadata/attributes/{id}]
+ Parameters
  + id: `5290a290-0313-11e6-9464-e4de00000020` (required, string) - id Доп. поля
### Отдельное доп. поле [GET]
Запрос на получение информации по отдельному дополнительному полю.
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление отдельного доп. поля.
  + Body
        <!-- include(body/project/metadata_by_id.json) -->

## Проект [/entity/project/{id}]
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Проекта

### Получить Проект [GET]
Запрос на получение отдельного проекта с указанным id.
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление проекта.
  + Body
        <!-- include(body/project/get_by_id.json) -->


### Изменить Проект [PUT]
Запрос на обновление существующего проекта с указанным id.
+ Request Пример (application/json)
Пример запроса на обновление существующего проекта.
  + Body
        <!-- include(body/project/put_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление обновлённого проекта.
  + Body
        <!-- include(body/project/put_response.json) -->

+ Request Пример с доп полями(application/json)
Пример запроса на обновление существующего проекта с доп полями в теле запроса.
  + Body
        <!-- include(body/project/put_with_attributes_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление обновлённого проекта.
  + Body
        <!-- include(body/project/put_with_attributes_response.json) -->
