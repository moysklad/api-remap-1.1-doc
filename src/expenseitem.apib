# Group Статья расходов
## Статьи расходов [/entity/expenseitem]
Средствами JSON API можно запрашивать списки Статей расходов и сведения по отдельным Статьям расходов. Кодом сущности для Статей расходов в составе JSON API является ключевое слово **expenseitem**. Больше о Статьях расходов и работе с ними в основном интерфейсе вы можете прочитать в нашей службе поддержки по
[этой ссылке](https://support.moysklad.ru/hc/ru/articles/203325553-%D0%9F%D1%80%D0%B8%D0%B1%D1%8B%D0%BB%D0%B8-%D0%B8-%D1%83%D0%B1%D1%8B%D1%82%D0%BA%D0%B8).
По данной сущности можно осуществлять контекстный поиск с помощью специального параметра `search`. Подробнее можно узнать по [ссылке](#header-контекстный-поиск). Поиск с параметром search отличается от других тем, что поиск не префиксный, без токенизации и идет только по одному полю одновременно. Ищет такие строки, в которые входит значение строки поиска.

Поиск среди объектов Статей расходов на соответствие поисковой строке будет осуществлён по следующим полям:
+ по наименованию Cтатьи расходов **name**
+ по описанию Cтатьи расходов **description**

### Атрибуты сущности
+ **meta** - [Метаданные](#header-метаданные) о Статье расходов
+ **id** - ID в формате UUID `Только для чтения`
+ **accountId** - ID учетной записи `Только для чтения`
+ **version** - Версия сущности `Только для чтения`
+ **updated** - Момент последнего обновления сущности `Только для чтения`
+ **name** - Наименование Статьи расходов `Необходимое`
+ **description** - Описание Статьи расходов
+ **code** - Код Статьи расходов
+ **externalCode** - Внешний код Статьи расходов
+ **archived** - Добавлена ли Статья расходов в архив

### Атрибуты доступные для фильтрации
+ **id** - ID в формате UUID
+ **version** - Версия сущности
+ **updated** - Момент последнего обновления сущности
+ **updatedBy** - Автор последнего обновления сущности в формате `uid` (`admin@admin`)
+ **name** - Наименование Статьи расходов
+ **description** - Описание Статьи расходов
+ **code** - Код Статьи расходов
+ **externalCode** - Внешний код Статьи расходов

### Атрибуты доступные для сортировки
+ **id** - ID в формате UUID
+ **version** - Версия сущности
+ **updated** - Момент последнего обновления сущности
+ **name** - Наименование Статьи расходов
+ **description** - Описание Статьи расходов
+ **code** - Код Статьи расходов
+ **externalCode** - Внешний код Статьи расходов

### Получить Статьи расходов [GET]
Запрос на получение списка статей расходов.
+ Parameters
  + limit: 100 (optional, enum[number])
  Максимальное количество сущностей для извлечения.
  <p>
    <code>Допустимые значения 1 - 100</code>
  </p>
      + Default: `25`
  + offset: 40 (optional, number)
    Отступ в выдаваемом списке сущностей
      + Default: `0`

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление списка Статей расходов.
  + Body
        <!-- include(body/expense_item/get_list.json) -->

### Создать Статью расходов [POST]
Запрос на создание новой статьи расходов. Обязательное поле для создание статьи расходов - **name**.
+ Request Пример (application/json)
Пример запроса на создание новой статьи расходов.
  + Body
        <!-- include(body/expense_item/post_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданной статьи расходов.
  + Body
        <!-- include(body/expense_item/post_response.json) -->

### Удалить Статью расходов [DELETE /entity/expenseitem/{id}]
Запрос на удаление Статьи расходов с указанным id.
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Статьи расходов

+ Response 200 (application/json)
Успешное удаление Статьи расходов.
  + Body

## Статья расходов [/entity/expenseitem/{id}]
Работа со статьёй расходов с указанным id.
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id статьи расходов

### Получить Статью расходов [GET]
Запрос на получение статьи расходов с указанным id.
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление списка Статей расходов.
  + Body
        <!-- include(body/expense_item/get_by_id.json) -->

### Изменить Статью расходов [PUT]
Запрос на изменение существующей статьи расходов.
+ Request Пример (application/json)
Пример запроса на обновление статьи расходов.
  + Body
        <!-- include(body/expense_item/put_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление обновлённой статьи расходов.
  + Body
        <!-- include(body/expense_item/put_response.json) -->
