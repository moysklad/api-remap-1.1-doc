# Group Документ Общие сведения
## Шаблоны документов
**Шаблон** - предзаполненный стандартными полями JSON-объект, который затем можно использовать для успешного создания документа.
Средствами JSON API можно получать предзаполненные шаблоны документов. Они могут быть предзаполнены как на основе других документов, так и стандартными значениями без связей с другими документами.
Для этого, во всех документах, по которым можно получить шаблон, существует специальный ресурс `Шаблон документа`, адрес которого формируется следующим образом:<br>
`https://online.moysklad.ru/api/remap/1.1/entity/<ключевое слово для документа>/new`
<br>
В тело PUT запроса по данному ресурсу нужно передать метаданные документа, на основе которого будет создан шаблон нового документа, либо просто передать пустое тело запроса.
Метаданные должны быть "обёрнуты" в объект, имя которого есть ключевое слово для документа-основания в JSON API.
Для каждого из данных ресурсов есть примеры запросов и ответов.<br>
На данный момент можно получить шаблоны следующих документы на основании других:

| Документ                           | Основание, на котором он может быть создан  |
| ---------------------------------- |:-------------------------------------------:|
| Возврат покупателя (salesreturn)   | Отгрузка (demand), <br>Розничная продажа (retaildemand)                           |
| Возврат поставщику (purchasereturn)| Приёмка (supply)                            |
| Отгрузка (demand)                  | Заказ покупателя (customerorder)            |
| Счет поставщика (invoicein)        | Заказ поставщику (purchaseorder)            |
| Cчет покупателю (invoiceout)       | Заказ покупателя (customerorder)            |
| Списание (loss)                    | Возврат покупателя (salesreturn),<br>инвентаризация(inventory)          |
| Оприходование (enter)              | Инвентаризация(inventory)                   |
| Заказ поставщику (purchaseorder)                    | Внутренний заказ (internalorder)            |
| Перемещение (move)                    | Внутренний заказ (internalorder)            |
| Приходный ордер (cashin)                    | Заказ покупателя (salesreturn), <br>Возврат поставщику (purchasereturn), <br>Отгрузка (demand), <br>Счёт покупателю (invoiceout), <br>Полученный отчёт комиссионера (commissionreportin)            |
| Расходный ордер (cashout)                    | Возврат покупателя (salesreturn), <br>Приёмка (supply), <br>Счёт поставщика (invoicein), <br>Заказ поставщику (purchaseorder), <br>Выданный отчёт комиссионера (commissionreportout)             |
| Входящий платёж (paymentin)                    | Заказ покупателя (salesreturn), <br>Возврат поставщику (purchasereturn), <br>Отгрузка (demand), <br>Счёт покупателю (invoiceout), <br>Полученный отчёт комиссионера (commissionreportin)            |
| Исходящий платёж (paymentout)                    | Возврат покупателя (salesreturn), <br>Приёмка (supply), <br>Счёт поставщика (invoicein), <br>Заказ поставщику (purchaseorder), <br>Выданный отчёт комиссионера (commissionreportout)             |
| Тех. операция (processing)              | Заказ на производство (processingorder), Тех. карта (processingplan)                   |
| Заказ на производство (processingorder)              | Тех. карта (processingplan)                   |
| Розничная продажа (retaildemand)                     | Розничная смена, Заказ покупателя             |

 <h2>В результате PUT запроса по /entity/entityName/new НЕ будет создано нового документа</h2>
 Возвращаемый предзаполненный объект является лишь "болванкой" с некоторыми заполненными полями (поля заполняются по той же логике,
 что и в аналогичной ситуации в основном интерфейсе), облегчающей создание документа. Он не сохраняется в системе. Этот
 объект затем можно передать в теле запроса на создание соответствующего документа и тогда уже документ будет создан, и связан с документом-основанием.
<br>
Если послать на данный ресурс пустое тело запроса, то в итоговом шаблоне будут предзаполнены лишь стандартные поля в т.ч. указанные в настройках пользователя
в учётной записи сервиса МойСклад.

С подробностями и примерами по каждому из документов можно ознакомиться в соответствующих разделах документации.
Например, для шаблона отгрузки - смотреть в [Шаблонах отгрузки](#документ-отгрузка-шаблон-отгрузки)

## Контекстный поиск для документов
В JSON API можно осуществлять контекстный поиск среди списка сущностей определённого типа по их строковым полям. Для этого
используется URI параметр фильтрации **search**.
+ **search**
  Параметр фильтрации, с помощью которого можно осуществить поиск в списке сущностей. Поиск происходит по основным строковым полям сущностей данного
  типа. Результатом поиска будет отсортированный по релевантности список сущностей данного типа, прошедших фильтрацию по переданной поисковой строке. В отличии от фильтрации выборки
  с помощью параметра **filter**, при которой значения проверяются на точное совпадение указанным, при контекстном поиске проверка на совпадение не строгая.
  Таким образом, если осуществлять фильтрацию вида `../entity/<entity_type>?filter=name=иван` в отфильтрованную выборку попадут только те сущности, поле **name**
  у которых имеет значение `иван` и никакие другие. При контекстном поиске вида `../entity/<entity_type>?search=иван` будут выведены как сущности с **name** равным
  `иван`, так и сущности, в имени (или в другом строковом поле) которых `иван` просто содержится, например `диван`, `иванова` и т.п.

  Поиск среди документов на соответствие поисковой строке будет осуществлён по следующим полям:
  + по наименованию (name)
  + по описанию (description)
  + по входящему номеру (incomingNumber)

  + Примеры запросов контекстного поиска (значения должны быть urlencoded):
    - `https://online.moysklad.ru/api/remap/1.1/entity/retaildemand?search=100`
    - `https://online.moysklad.ru/api/remap/1.1/entity/salesreturn?search=брак`
    - `https://online.moysklad.ru/api/remap/1.1/entity/retailshift?search=ночная`

## Удаление в корзину
Корзина позволяет избежать риска случайного удаления важных документов. Удаление
в корзину доступно только при наличии у сотрудника соответствующих прав, а также
настроек компании на использовании корзины.

### Пример удаления Приёмки в корзину [POST /entity/supply/be3a3a0e-370c-11e7-1542-821d00000001/trash]
Запрос на удаление Приёмки с указанным id в корзину.
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Приёмки

+ Response 200 (application/json)
Успешное удаление Приёмки.
  + Body


## Связи документов
## Привязка документов к документам [/entity/{docname}/{id}]
Для того чтобы привязать к уже существующему документу другой документ нужно
передать **meta** привязываемого документа в коллекцию связанных документов этого типа.
Такие коллекции присутствуют среди аттрибутов документов. В описании сущностей они описаны в секции **Связи с другими документами**
и каждое поле называется как ключевое слово для типов привязываемых документов во множественном числе. Например поле **invoicesOut** у отгрузок
отвечает за связи с счетами покупателю. Если вы хотите привязать к отгрузке счёт, в это поле, в составе коллекции, нужно положить **meta** счёта покупателя который вы хотите привязать.
Можно привязывать более 1 документа.

+ Parameters
  + docname: `move` (required, string) - ключевое слово для документа со связями
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id документа

### Пример привязки 1 [PUT /entity/move/7944ef04-f831-11e5-7a69-971500188b19]
Привязка внутреннего заказа к перемещению.

+ Request Пример (application/json)
Пример запроса на привязку внутреннего заказа к перемещению.
  + Body
        <!-- include(body/docgen/link1_request.json) -->

+ Response 200 (application/json)
Результат - перемещение с заполненным полем internalOrder.
  + Body
        <!-- include(body/docgen/link1_response.json) -->

### Пример привязки 2 [PUT /entity/demand/7944ef04-f831-11e5-7a69-971500188b19]
Второй пример запроса на привязку одного документа к другому.

+ Request Пример (application/json)
Пример запроса на привязку счёта покупателю к отгрузке.
  + Body
        <!-- include(body/docgen/link2_request.json) -->

+ Response 200 (application/json)
Результат - отгрузка с новым элементом в коллекции invoicesOut.
  + Body
        <!-- include(body/docgen/link2_response.json) -->


## Привязка платежей к документам [/entity/{docname2}/{id}]
К некоторым документам в JSON API могут быть привязаны платежи. Платежи бывают 4-х типов: [Входящий платёж](#документ-входящий-платеж), [Приходный ордер](#документ-приходный-ордер), [Исходящий платёж](#документ-исходящий-платеж), [Расходный ордер](#документ-расходный-ордер).
Документы, к которым могут быть привязаны платежи содержат вложенную коллекцию **payments** среди атрибутов докуента. Платежи в свою очередь содержат коллекцию **operations** - операции, к которым привязан данный платёж. Для того, чтобы привязать платёж к документу, нужно в запросах
на создание/обновление платежа в составе коллекции **operations** указать **meta** документа. Документы в этой коллекции могут иметь разный тип, однако это не значит, что к любому документу можно привязать все 4 типа платежей. Валидные типы платежей определяются самим документом, к которому происходит привязка. К примеру к полученному отчёту комиссионера можно привязать только входящий платёж или приходный ордер. <br>
В результате привзяки платежа, в составе коллекции **operations** платежа появится новый объект, указывающий на документ, а в составе коллекции **payments** у документа, к которому
привязывается платёж, появится новый элемент ссылающийся на данный платёж.

+ Parameters
  + docname2: `commissionreportin` (required, string) - ключевое слово для документа, к которому можно привязать платёж
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id документа


### Пример привязки платежа 1 [PUT /entity/paymentin/7944ef04-f831-11e5-7a69-971500188b19]
Привязка входящего платежа к полученному отчёту комиссионера.

+ Request Пример (application/json)
Пример запроса на привязку платежа к полученному отчёту комиссионера.
  + Body
        <!-- include(body/docgen/link_payment_request.json) -->

+ Response 200 (application/json)
Результат - входящий платёж с новым элементом в коллекции operations.
  + Body
        <!-- include(body/docgen/link_payment_response.json) -->

### Пример привязки платежа 2 [PUT /entity/cashin/7944ef04-f831-11e5-7a69-971500188b19]
Привязка приходного ордера к заказу покупателя.

+ Request Пример (application/json)
Пример запроса на привязку приходного ордера к заказу покупателя.
  + Body
        <!-- include(body/docgen/link_payment2_request.json) -->

+ Response 200 (application/json)
Результат - приходный ордер с новым элементом в коллекции operations.
  + Body
        <!-- include(body/docgen/link_payment2_response.json) -->
