# Group Юрлицо
Средствами JSON API можно создавать и обновлять сведения о Юрлицах, запрашивать списки Юрлиц и сведения по отдельным Юрлицам. С помощью специального ресурса можно управлять счетами отдельного Юрлица. Кодом сущности для Юрлица в составе JSON API является ключевое слово **organization**.
По данной сущности можно осуществлять контекстный поиск с помощью специального параметра `search`. Подробнее можно узнать по [ссылке](#header-контекстный-поиск).

Поиск среди объектов Юрлиц на соответствие поисковой строке будет осуществлён по следующим полям:
+ По наименованию Юрлица **name**
+ По коду Юрлица **code**
+ По полному наименованию Юрлица **legalTitle**
+ По адресу электронной почты **email**
+ По номеру городского телефона **phone**
+ По комментарию **description**
+ По номеру дисконтной карты

## Юрлица [/entity/organization]
+ **meta** - [Метаданные](#header-метаданные) о Юрлице
+ **id** - ID в формате UUID `Только для чтения`
+ **accountId** - ID учетной записи `Только для чтения`
+ **syncId** - ID синхронизации. После заполнения недоступен для изменения.
+ **owner** - Ссылка на Владельца (Сотрудника) в формате [Метаданных](#header-метаданные)
+ **shared** - Общий доступ
+ **group** - Отдел сотрудника в формате [Метаданных](#header-метаданные)
+ **version** - Версия сущности `Только для чтения`
+ **updated** - Момент последнего обновления сущности `Только для чтения`
+ **name** - Краткое наименование Юрлица `Необходимое`
+ **description** - Комментарий к Юрлицу
+ **code** - Код Юрлица
+ **actualAddress** - Фактический адрес Юрлица
+ **actualAddressFull** - Фактический адрес Юрлица с детализацией по отдельным полям.
+ **externalCode** - Внешний код Юрлица
+ **archived** - Добавлено ли Юрлицо в архив
+ **created** - Дата создания
+ **companyType** - Тип Юрлица. `[Юридическое лицо, Индивидуальный предприниматель, Физическое лицо]`.
В зависимости от значения данного поля набор выводимых реквизитов Юрлица может меняться.  Подробнее [тут](#header-тип-юрлица)
+ **trackingContractNumber** - Номер договора с ЦРПТ
+ **trackingContractDate** - Дата договора с ЦРПТ

<h3>Поля реквизитов</h3>
___
+ **legalTitle** - Полное наименование для Юрлица типа `[Юридическое лицо]`. Игнорируется для Юрлиц типа `[Индивидуальный предприниматель, Физическое лицо]`, если передано одно из значений для ФИО и формируется автоматически на основе получаемых ФИО Юрлица.
+ **legalLastName** - Фамилия для Юрлица типа `[Индивидуальный предприниматель, Физическое лицо]`. Игнорируется для Юрлиц типа `[Юридическое лицо]`.
+ **legalFirstName** - Имя для Юрлица типа `[Индивидуальный предприниматель, Физическое лицо]`. Игнорируется для Юрлиц типа `[Юридическое лицо]`.
+ **legalMiddleName** - Отчество для Юрлица типа `[Индивидуальный предприниматель, Физическое лицо]`. Игнорируется для Юрлиц типа `[Юридическое лицо]`.
+ **legalAddress** - Юридический адрес Юрлица
+ **legalAddressFull** - Юридический адрес юрлица с детализацией по отдельным полям.
+ **inn** - ИНН
+ **kpp** - КПП
+ **ogrn** - ОГРН
+ **ogrnip** - ОГРНИП
+ **okpo** - ОКПО
+ **certificateNumber** - Номер свидетельства
+ **certificateDate** - Дата свидетельства
___
+ **email** - Электронная почта
+ **phone** - Телефон
+ **fax** - Факс
+ **accounts** - [Метаданные](#header-метаданные), представляющие собой ссылку на счета Юрлица
+ **attributes** - Коллекция доп. полей в формате [Метаданных](#header-метаданные)
+ **isEgaisEnable** - Включен ли ЕГАИС для данного Юрлица
+ **fsrarId** - Идентификатор в ФСРАР
+ **payerVat** - Является ли данное Юрлицо плательщиком НДС
+ **utmUrl** - IP-адрес УТМ
+ **director** - Руководитель
+ **chiefAccountant** - Главный бухгалтер


### Атрибуты вложенных сущностей
#### Аттрибуты сущности Адрес
+ **postalCode** - Почтовый индекс
+ **country** - Ссылка на страну в формате [Метаданных](#header-метаданные)
+ **region** - Ссылка на регион в формате [Метаданных](#header-метаданные)
+ **city** - Город
+ **street** - Улица
+ **house** - Дом (Максимальная длина - 30 символов)
+ **apartment** - Квартира (Максимальная длина - 30 символов)
+ **addInfo** - Другое
+ **comment** - Комментарий

Строка адреса является конкатенацией полей структурированного адреса в следующем порядке: postalCode -> country -> region -> city -> street -> house -> apartment -> addInfo, используя запятую в качестве разделителя.
При передаче в МойСклад сущностей с адресом используйте либо строковый адрес, либо структурированнй.
При передаче обоих адресов строковый будет игнорирован.
При передаче только строкового он будет отражаться как в строковом поле, так и в addInfo структурированного адреса.

#### Счета Юрлица
+ **id** - ID в формате UUID `Только для чтения`
+ **accountId** - ID учетной записи `Только для чтения`
+ **version** - Версия сущности. `Только для чтения`
+ **updated** - Момент последнего обновления сущности`Только для чтения`
+ **isDefault** - Является ли счёт основным счётом Юрлица
+ **accountNumber** - Номер счёта `Необходимо`
+ **bankName** - Наименование банка
+ **bankLocation** - Адрес банка
+ **correspondentAccount** - Корр счет
+ **bic** - БИК
+ **agent** - Ссылка на Юрлицо (тип [Мета](#header-метаданные)) `Необходимо`

### Тип Юрлица
В зависимости от типа Юрлица **companyType** в составе его объекта будут выводиться разные наборы реквизитов.
Типы Юрлица и соответствующие значения, которые могут быть переданы в значение данного поля:
| Тип Юрлица                | Значение поля companyType  |
| ------------------------------ |:---------------------------|
| Юридическое лицо               | legal                      |
| Индивидуальный предприниматель | entrepreneur               |
| Физическое лицо                | individual                 |

Если тип Юрлица `Юридическое лицо`, будут выведены следующие поля реквизитов:
+ **legalTitle** - Полное наименование Юрлица
+ **legalAddress** - Юридический адрес Юрлица
+ **inn** - ИНН
+ **kpp** - КПП
+ **ogrn** - ОГРН
+ **okpo** - ОКПО

Если тип Юрлица `Индивидуальный предприниматель`, будут выведены следующие поля реквизитов:
+ **legalTitle** - Полное наименование. Игнорируется, если передано одно из значений для ФИО. Формируется автоматически на основе получаемых ФИО Юрлица
+ **legalLastName** - Фамилия Юрлица
+ **legalFirstName** - Имя Юрлица
+ **legalMiddleName** - Отчество Юрлица
+ **legalAddress** - Юридический адрес Юрлица
+ **inn** - ИНН
+ **okpo** - ОКПО
+ **ogrnip** - ОГРНИП
+ **certificateNumber** - Номер свидетельства
+ **certificateDate** - Дата свидетельства

Если тип Юрлица `Физическое лицо`, будут выведены следующие поля реквизитов:
+ **legalTitle** - Полное наименование. Игнорируется, если передано одно из значений для ФИО. Формируется автоматически на основе получаемых ФИО Юрлица
+ **legalLastName** - Фамилия Юрлица
+ **legalFirstName** - Имя Юрлица
+ **legalMiddleName** - Отчество Юрлица
+ **legalTitle** - Полное наименование Юрлица
+ **legalAddress** - Юридический адрес Юрлица
+ **inn** - ИНН

О работе с доп. полями Юрлиц можно прочитать [здесь](#header-работа-с-дополнительными-полями)

### Атрибуты доступные для фильтрации
+ **id** - ID в формате UUID
+ **owner** - Ссылка на Владельца (Сотрудника)
+ **shared** - Общий доступ
+ **group** - Отдел сотрудника
+ **version** - Версия сущности
+ **updated** - Момент последнего обновления сущности
+ **updatedBy** - Автор последнего обновления сущности в формате `uid` (`admin@admin`)
+ **name** - Краткое наименование Юрлица
+ **description** - Комментарий к Юрлицу
+ **code** - Код Юрлица
+ **externalCode** - Внешний код Юрлица
+ **archived** - Добавлено ли Юрлицо в архив
+ **created** - Дата создания
+ **companyType** - Тип Юрлица
+ **legalTitle** - Полное наименование Юрлица
+ **legalAddress** - Юридический адрес Юрлица
+ **inn** - ИНН
+ **kpp** - КПП
+ **email** - Электронная почта
+ **phone** - Телефон
+ **fax** - Факс
+ **actualAddress** - Фактический адрес Юрлица

### Атрибуты доступные для сортировки
+ **id** - ID в формате UUID
+ **version** - Версия сущности
+ **updated** - Момент последнего обновления сущности
+ **name** - Краткое наименование Юрлица
+ **description** - Комментарий к Юрлицу
+ **code** - Код Юрлица
+ **externalCode** - Внешний код Юрлица
+ **archived** - Добавлено ли Юрлицо в архив
+ **created** - Дата создания
+ **legalTitle** - Полное наименование Юрлица
+ **legalAddress** - Юридический адрес Юрлица
+ **inn** - ИНН
+ **kpp** - КПП
+ **email** - Электронная почта
+ **phone** - Телефон
+ **fax** - Факс

### Получить список Юрлиц [GET]
Запрос на получение списка Юрлиц на данной учётной записи.
- **meta** [Метаданные](#header-метаданные) о выдаче,
- **context** - [Метаданные](#header-метаданные) о сотруднике, выполнившем запрос.
- **rows** - Массив JSON объектов, представляющих собой Юрлица.
+ Parameters
  + limit: 100 (optional, enum[number])
  Максимальное количество сущностей для извлечения.
  <p>
    <code>Допустимые значения 1 - 100</code>
  </p>
      + Default: `25`
  + offset: 40 (optional, number)
    Отступ в выдаваемом списке сущностей
      + Default: `0`

+ Response 200 (application/json)
Успешный запрос.Результат: Объект JSON, включающий в себя поля:
  + Body
        <!-- include(body/organization/get_list.json) -->

### Создать Юрлицо [POST]
Запрос на создание нового Юрлица.
### Описание
Юрлицо создаётся на основе переданного объекта JSON,
который содержит представление нового Юрлица.

+ Request Пример 1 (application/json)
Пример создания нового Юрлица.
  + Body
        <!-- include(body/organization/post_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного Юрлица.
  + Body
        <!-- include(body/organization/post_response.json) -->

+ Request Пример 2 (application/json)
Пример запроса на создание Юрлица с указанием юридических реквизитов для типа Индивидуальный Предприниматель.
  + Body
        <!-- include(body/organization/post_entrepreneur_names_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного Юрлица.
  + Body
        <!-- include(body/organization/post_entrepreneur_names_response.json) -->

+ Request Пример с доп. полями(application/json)
Пример создания нового Юрлица с доп полями в теле запроса.
  + Body
        <!-- include(body/organization/post_with_attributes_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного Юрлица.
  + Body
        <!-- include(body/organization/post_with_attributes_response.json) -->

### Удалить Юрлицо [DELETE /entity/organization/{id}]
Запрос на удаление Юрлица с указанным id.
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Юрлица

+ Response 200 (application/json)
Успешное удаление Юрлица.
  + Body

## Метаданные Юрлиц [/entity/organization/metadata]
### Метаданные Юрлиц [GET]
Запрос на получение метаданных Юрлиц. Результат - объект JSON, включающий в себя:
+ **meta** - Ссылка на метаданные Юрлиц
+ **attributes** - Массив объектов доп. полей Юрлиц в формате [Метаданных](#header-метаданные)
+ **createShared** - создавать новые Юрлица с меткой "Общий"

Структура отдельного объекта, представляющего доп. поле подробно описана в разделе [Работа с дополнительными полями](#header-работа-с-дополнительными-полями).

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление доп. полей Юрлиц.
  + Body
        <!-- include(body/organization/get_metadata.json) -->

## Отдельное доп. поле [/entity/organization/metadata/attributes/{id}]
+ Parameters
  + id: `5290a290-0313-11e6-9464-e4de00000020` (required, string) - id Доп. поля
### Отдельное доп. поле [GET]
Запрос на получение информации по отдельному дополнительному полю.
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление отдельного доп. поля.
  + Body
        <!-- include(body/organization/metadata_by_id.json) -->

## Юрлицо [/entity/organization/{id}]
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Юрлица.

### Получить Юрлицо [GET]
Запрос на получение Юрлица с указанным id.
+ Parameters
  + limit: 100 (optional, enum[number])
  Максимальное количество сущностей для извлечения.
  <p>
    <code>Допустимые значения 1 - 100</code>
  </p>
      + Default: `25`
  + offset: 40 (optional, number)
    Отступ в выдаваемом списке сущностей
      + Default: `0`

+ Request Пример 1
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление Юрлица с указанным id.
  + Body
        <!-- include(body/organization/get_by_id.json) -->

+ Request Пример 2
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление Юрлица типа Индивидуальный Предприниматель с указанным id.
  + Body
        <!-- include(body/organization/get_entrepreneur_by_id.json) -->

### Изменить Юрлицо [PUT]
Запрос на обновление Юрлица с указанным id.

+ Request Пример (application/json)
Пример запроса на обновление Юрлица с указанным id.
  + Body
        <!-- include(body/organization/post_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON обновлённого Юрлица.
  + Body
        <!-- include(body/organization/post_response.json) -->

+ Request Пример с доп полями (application/json)
Пример запроса на обновление Юрлица с указанным id.
  + Body
        <!-- include(body/organization/put_with_attributes_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON обновлённого Юрлица.
  + Body
        <!-- include(body/organization/put_with_attributes_response.json) -->

## Счета Юрлица [/entity/organization/{id}/accounts]
Список счетов Юрлица с указанным id.
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Юрлица.

### Получить список счетов Юрлица [GET]
Возвращает массив JSON представлений счетов Юрлица.
+ Parameters
  + limit: 100 (optional, enum[number])
  Максимальное количество сущностей для извлечения.
  <p>
    <code>Допустимые значения 1 - 100</code>
  </p>
      + Default: `25`
  + offset: 40 (optional, number)
    Отступ в выдаваемом списке сущностей
      + Default: `0`

+ Response 200 (application/json)
Успешный запрос.
  + Body
        <!-- include(body/organization/get_accounts.json) -->

### Изменить счета Юрлица[POST]
### Описание
Обновляются счета Юрлица с указанным id.
Обновляются все поля, указанные в JSON объекте запроса, кроме
помеченных `Только для чтения` в описании [атрибутов счетов Юрлица](#header-счета-юрлица).
Поля, которые не были указаны в JSON запроса, не изменяются.
+ Request Пример (application/json)
  + Body
      <!-- include(body/put_accounts_body.json) -->

+ Response 200 (application/json)
  + Body
      <!-- include(body/put_accounts_response.json) -->



# Data Structures

## Organization (Legendable Entity)
+  legalTitle: (string, required)  - Полное наименование
+  legalAddress: (string, required)  - Юридический адрес
+  actualAddress: (string, required)  - Фактический адрес
+  inn: (string, required)  - ИНН
+  kpp: (string, required)  - КПП
+  ogrn: (string, required)  - ОГРН
+  okpo: (string, required)  - ОКПО
+  ogrnip: (string, required)  - ОГРНИП
+  certificateNumber: (string, required)  - Номер свидетельства
+  certificateDate: (string, required)  - Дата свиделтельства
+  email: (string, required)  - Электронная почта
+  phone: (string, required)  - Телефон
+  fax: (string, required)  - Факс
+  accounts: (MetaRef, required)  - [Метаданные](#header-метаданные), представляющие собой ссылку на счета Юрлица


## Organization List (object)
+ context: (Context, required)
+ meta: (Meta, required)
+ rows: (array[Organization], required, fixed) - Массив Юрлиц
