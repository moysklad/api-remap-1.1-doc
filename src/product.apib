# Group Товар
## Товары [/entity/product]
Средствами JSON API можно создавать и обновлять сведения о Товарах, запрашивать списки Товаров и сведения по отдельным Товарам. Кодом сущности для Товара в составе JSON API является ключевое слово **product**. Больше о Товарах и работе с ними в основном интерфейсе вы можете прочитать в нашей службе поддержки в разделе
 [Товары и склад](https://support.moysklad.ru/hc/ru/sections/200564973-%D0%A2%D0%BE%D0%B2%D0%B0%D1%80%D1%8B-%D0%B8-%D1%81%D0%BA%D0%BB%D0%B0%D0%B4).
По данной сущности можно осуществлять контекстный поиск с помощью специального параметра `search`. Подробнее можно узнать по [ссылке](#header-контекстный-поиск).

Поиск среди объектов товаров на соответствие поисковой строке будет осуществлён по следующим полям:
+ по наименованию товара (name)
+ по коду товара (code)
+ по артикулу (article)

### Атрибуты сущности
+ **meta** - [Метаданные](#header-метаданные) объекта
+ **id** - ID Товара в формате UUID `Только для чтения`
+ **accountId** - ID учетной записи `Только для чтения`
+ **owner** - Ссылка на Владельца (Сотрудника) в формате [Метаданных](#header-метаданные)
+ **shared** - Общий доступ
+ **group** - Отдел сотрудника в формате [Метаданных](#header-метаданные)
+ **syncId** - ID синхронизации. После заполнения недоступен для изменения.
+ **version** - Версия сущности `Только для чтения`
+ **updated** - Момент последнего обновления сущности `Только для чтения`
+ **name** - Наименование Товара `Необходимое`
+ **description** - Описание Товара
+ **code** - Код Товара
+ **externalCode** - Внешний код Товара
+ **archived** - Отметка о том, добавлен ли Товар в архив
+ **pathName** - Наименование группы, в которую входит Товар `Только для чтения`
+ **vat** - НДС %
+ **effectiveVat** - Реальный НДС % `Только для чтения`
+ **productFolder** - Ссылка на группу Товаров в формате [Метаданных](#header-метаданные)
+ **uom** - Ссылка на единицы измерения в формате [Метаданных](#header-метаданные)
+ **image** - Изображение Товара
+ **minPrice** - Минимальная цена
+ **buyPrice** - Закупочная цена
+ **salePrices** - Цены продажи
+ **supplier** - Ссылка на контрагента-поставщика в формате [Метаданных](#header-метаданные)
+ **attributes** - Коллекция доп. полей в формате [Метаданных](#header-метаданные)
+ **country** - Ссылка на страну в формате [Метаданных](#header-метаданные)
+ **article** - Артикул
+ **weighed** - Весовой товар
+ **tobacco** - Табачная продукция. Не может быть указан вместе с **alcoholic**, **weighed** и **isSerialTrackable**
+ **weight** - Вес
+ **volume** - Объём
+ **packs** - Упаковки Товара
+ **barcodes** - Массив штрихкодов товара
+ **alcoholic** - Объект, содержащий поля алкогольной продукции.
  + **excise** - Содержит акцизную марку
  + **type**  - Код вида продукции
  + **strength** - Крепость
  + **volume** - Объём тары
+ **modificationsCount** - Количество модификаций у данного товара `Только для чтения`
+ **minimumBalance** - Неснижаемый остаток
+ **isSerialTrackable** - Учет по серийным номерам. Не может быть указан вместе с **alcoholic** и **weighed**
+ **things** - Серийные номера `Только для чтения`
+ **trackingType** - Тип маркируемой продукции
  + **NOT_TRACKED** - Без маркировки
  + **TOBACCO** - Тип маркировки "Табак"
  + **SHOES** - Тип маркировки "Обувь"
  + **LP_CLOTHES** - Тип маркировки "Одежда"
  + **LP_LINENS** - Тип маркировки "Постельное белье"
  + **PERFUMERY** - Духи и туалетная вода
  + **ELECTRONICS** - Фотокамеры и лампы-вспышки
  + **TIRES** - Шины и покрышки
  + **MILK** - Тип маркировки "Молочная продукция"
  + **OTP** - Альтернативная табачная продукция
  
+ **tnved** - Код ТН ВЭД
+ **paymentItemType** - Признак предмета расчета
  + **GOOD** - Товар
  + **EXCISABLE_GOOD** - Подакцизный товар
  + **COMPOUND_PAYMENT_ITEM** - Составной предмет расчета
  + **ANOTHER_PAYMENT_ITEM** - Иной предмет расчета
+ **discountProhibited** - Признак запрета скидок.
+ **taxSystem** - Код системы налогообложения.

| Система налогообложения    | Значение поля taxSystem                |
| ---------------------------|:---------------------------------------|
| Совпадает с группой        | TAX_SYSTEM_SAME_AS_GROUP               |
| ОСН                        | GENERAL_TAX_SYSTEM                     |
| УСН. Доход                 | SIMPLIFIED_TAX_SYSTEM_INCOME           |
| УСН. Доход-Расход          | SIMPLIFIED_TAX_SYSTEM_INCOME_OUTCOME   |
| ЕСХН                       | UNIFIED_AGRICULTURAL_TAX               |
| ЕНВД                       | PRESUMPTIVE_TAX_SYSTEM                 |
| Патент                     | PATENT_BASED                           |

Атрибут **pathName** сам по себе является атрибутом только для чтения, однако его можно изменить
с помощью обновления атрибута **productFolder**.

### Атрибуты доступные для фильтрации
+ **id** - ID Товара в формате UUID
+ **owner** - Ссылка на Владельца (Сотрудника) 
+ **shared** - Общий доступ
+ **group** - Отдел сотрудника 
+ **syncId** - ID синхронизации
+ **version** - Версия сущности
+ **updated** - Момент последнего обновления сущности
+ **updatedBy** - Автор последнего обновления сущности в формате `uid` (`admin@admin`)
+ **name** - Наименование Товара
+ **description** - Описание Товара
+ **code** - Код Товара
+ **externalCode** - Внешний код Товара
+ **archived** - Отметка о том, добавлен ли Товар в архив
+ **pathName** - Наименование группы, в которую входит Товар
+ **vat** - НДС %
+ **supplier** - Ссылка на контрагента-поставщика 
+ **article** - Артикул
+ **weighed** - Весовой товар
+ **weight** - Вес
+ **volume** - Объём
+ **minimumBalance** - Неснижаемый остаток
+ **isSerialTrackable** - Учет по серийным номерам

### Атрибуты доступные для сортировки
+ **id** - ID Товара в формате UUID
+ **version** - Версия сущности
+ **updated** - Момент последнего обновления сущности
+ **name** - Наименование Товара
+ **code** - Код Товара
+ **externalCode** - Внешний код Товара
+ **archived** - Отметка о том, добавлен ли Товар в архив
+ **pathName** - Наименование группы, в которую входит Товар
+ **weighed** - Весовой товар
+ **weight** - Вес
+ **volume** - Объём
+ **isSerialTrackable** - Учет по серийным номерам


### Атрибуты вложенных сущностей
#### Упаковки Товара:
+ **id** - ID в формате UUID `Только для чтения`
+ **uom** - Ссылка на единицы измерения в формате [Метаданных](#header-метаданные) `Необходимое`
+ **quantity** - Количество Товаров в упаковке данного вида `Необходимое`
+ **barcodes** - Массив штрихкодов упаковок товаров. Данный массив может содержать не более одного штрихкода. Если штрихкод в массиве отсутствует, то данное поле не выводится.
В версии API 1.1 был удалён отдельный ресурс для работы с упаковками товаров. Теперь упаковки - вложенная коллекция.
Для того, чтобы создать новую упаковку для данного товара, нужно в запросе на обновление товара указать её как элемент
поля **packs**, а в её составе указать ссылку в формате meta на единицу измерения и количество товаров в упаковке.
Для упаковки товара нельзя указать ссылку на единицу измерения, совпадающую с единицей измерения товара, иначе возникнет ошибка.
При обновлении штрихкодов упаковки в рамках обновления товара, переданная коллекция штрихкодов упаковки полностью заменяет имеющуюся до этого
коллекцию.
Для обновления списка упаковок товара, необходимо в рамках обновления товара передать новую коллекцию упаковок. Новая коллекия упаковок товара
 полностью заменит старую коллекцию.

#### Метаданные Товаров
Метаданные Товаров содержат информацию о дополнительных полях и типах цен Товаров.

Типы цен - поле **priceType**, вложенное в объекты коллекции **salePrices**. Его значение - наименование соответствующего типа цен.

Посмотреть все созданные в основном интерфейсе доп. поля Товаров,
а также все типы цен можно с помощью запроса на получение метаданных Товаров.
Ответ - объект, со следующей структурой:
+ **meta** - Метаданные
+ **attributes** - коллекция всех существующих доп. полей Товаров в формате [Метаданных](#header-метаданные)
+ **priceTypes** - коллекция всех существующих типов цен.
+ **createShared** - создавать новые товары с меткой "Общий"

Структуры объектов отдельных коллекций:

#### Тип цены:
+ **name** - Наименование типа цен

О работе с доп. полями Товаров можно прочитать [здесь](#header-работа-с-дополнительными-полями)

#### Поставщик Товара:
+ **meta** - Метаданные, содержащие ссылку на поставщика.
Тип поставщика - Контрагент. Описание сущности Контрагент вы можете посмотреть [здесь](#контрагент)

#### Цены продажи
+ **value** - Значение цены
+ **currency** - Ссылка на валюту в формате [Метаданных](#header-метаданные)
+ **priceType** - Тип цены


#### Закупочная цена
+ **value** - Значение цены
+ **currency** - Ссылка на валюту в формате [Метаданных](#header-метаданные)

#### Изображение: структура и загрузка.
Структура поля **image**, которое вы получите при запросе товара с изображением:
+ **meta** - Метаданные об изображении
+ **title** - Название изображения
+ **filename** - Имя файла
+ **size** - Размер файла в байтах
+ **updated** - Дата последнего изменения
+ **miniature** - Ссылка на миниатюру изображения в формате Метаданных
+ **tiny** - Ссылка на уменьшенное изображение в формате Метаданных

<h4>Загрузка</h4>
Для загрузки изображения нужно в теле запроса на [создание](#товар-товары-post) или [обновление](#товар-товар-put) товара
указать поле **image** со следующими атрибутами:
+ **filename** - имя файла с расширением. Например - "банан.png"
+ **content** - Изображение, закодированное в формате Base64.

Если в запросе на обновление не будет полей **filename** и **content**, то весь объект **image**, если он присутствует в Body,
будет проигнорирован, т.к. сервер посчитает, что его обновление не требуется.

#### Группа Товара
+ **meta** - Метаданные, содержащие ссылку на группу Товара.
Описание сущности Группа вы можете посмотреть [здесь](#группа-товаров)
Обновление этого атрибута также обновит атрибут **pathName**.

#### Весовой товар
+ **weighed** - Поле, показывающее является ли товар весовым. Если его значение false - поле не отображается.
Если в основном интерфейсе у товара стоит отметка об учёте его по серийным номерам, выставить значение данного поля на true невозможно.

#### Особенности фильтрации поля archived
Если одновременно осуществляется фильтрация по полям **id** и **archived**, то фильтрация по полю **archived** не учитывается.


### Получить список Товаров [GET]
Запрос на получение всех Товаров для данной учётной записи.
Результат: Объект JSON, включающий в себя поля:
- **meta** [Метаданные](#header-метаданные) о выдаче,
- **context** - [Метаданные](#header-метаданные) о сотруднике, выполнившем запрос.
- **rows** - Массив JSON объектов, представляющих собой [Товары](#товар-товары).

+ Parameters
  + limit: 100 (optional, enum[number])
  Максимальное количество сущностей для извлечения.
  <p>
    <code>Допустимые значения 1 - 100</code>
  </p>
      + Default: `25`
  + offset: 40 (optional, number)
    Отступ в выдаваемом списке сущностей
      + Default: `0`

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление списка Товаров.
  + Body
        <!-- include(body/product/get_list_response.json) -->

### Создать Товар [POST]
Создать новый Товар.
### Описание
Товар создаётся на основе переданного объекта JSON,
который содержит представление нового Товара.
Результат - JSON представление созданного Товара. Для создания нового Товара,
необходимо и достаточно указать в переданном объекте не пустое поле `name`.
Если вы хотите создать алкогольный товар, то в теле запроса, нужно передать
объект **alcoholic**, у которого как минимум одна из характеристик:
+ **excise** - Содержит акцизную марку
+ **type**  - Код вида продукции
+ **strength** - Крепость
+ **volume** - Объём тары

Будет передана с значением. Иначе, при передаче пустого объекта **alcoholic**,
он будет проигнорирован, и товар создастся без пометки "Алкогольная продукция".


При создании товара с указанным массивом штрихкодов, каждый штрихкод проходит проверку
на то, к какому типу он относится EAN 8, EAN 13. Если же штрихкод не относится ни к одному из этих
2 типов, он записывается как штрихкод типа Code 128. При создании товара отсутствует возможность указать штрихкод в массиве штрихкодов, который будет иметь тип UPC. Данное поведение является
 ограничением JSON API 1.1
+ Request Пример 1 (application/json)
Пример наиболее полного по количеству полей запроса.
  + Body
        <!-- include(body/product/post_request_long.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного Товара.
  + Body
        <!-- include(body/product/post_long_response.json) -->

+ Request Пример 2 (application/json)
Пример запроса на создание Товара с единственным необходимым полем.
  + Body
        <!-- include(body/product/post_request_short.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного Товара.
  + Body
        <!-- include(body/product/post_short_response.json) -->

+ Request Пример с доп. полями (application/json)
Пример запроса на создание Товара с доп. полями.
  + Body
        <!-- include(body/product/post_with_attributes_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного Товара.
  + Body
        <!-- include(body/product/post_with_attributes_response.json) -->

+ Request Пример товар с изображением (application/json)
Пример запроса на создание Товара с загрузкой изображения.
  + Body
        <!-- include(body/product/post_with_image_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного Товара с изображением.
  + Body
        <!-- include(body/product/post_with_image_response.json) -->

### Удалить Товар [DELETE /entity/product/{id}]
Запрос на удаление Товара с указанным id.
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Товара

+ Response 200 (application/json)
Успешное удаление Товара.
  + Body

## Метаданные Товаров [/entity/product/metadata]
### Метаданные Товаров [GET]
Запрос на получение метаданных Товаров. Результат - объект JSON, включающий в себя:
+ **meta** - Метаданные
+ **attributes** - коллекция всех существующих доп. полей Товаров в формате [Метаданных](#header-метаданные)
+ **priceTypes** - коллекция всех существующих типов цен.
+ **createShared** - создавать новые комплекты с меткой "Общий"

Структура отдельного объекта, представляющего тип цены:
+ **name** - Наименование типа цен

Структура отдельного объекта, представляющего доп. поле подробно описана в разделе [Работа с дополнительными полями](#header-работа-с-дополнительными-полями).
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление доп. полей Товаров.
  + Body
        <!-- include(body/product/get_metadata.json) -->

## Отдельное доп. поле [/entity/product/metadata/attributes/{id}]
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Доп. поля
### Отдельное доп. поле [GET]
Запрос на получение информации по отдельному дополнительному полю.
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление отдельного доп. поля.
  + Body
        <!-- include(body/product/metadata_by_id.json) -->

## Товар [/entity/product/{id}]
Товар, обращение к которому происходит по значению его id.

+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Товара.

### Получить Товар [GET]
Запрос на получение Товара с указанным id.

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление Товара.
  + Body
        <!-- include(body/product/get_by_id_response.json) -->

### Изменить Товар [PUT]
Запрос на обновление существующего Товара.
Типы цен в ценах продаж и дополнительные поля обновляются как элементы вложенных коллекций:
+ Если в текущем объекте у какого-то из доп. полей / типов цен нет значения,
а в переданной коллекции оно есть - значение записывается в доп. поле / тип цены.
+ Если же у данного атрибута значение уже присутствует - оно перезаписывается на переданное.
+ Если у данного атрибута в составе объекта значение присутствует, однако оно отсутствует
в передаваемой в теле запроса коллекции (не передаётся совсем), то значение атрибута объекта не изменяется.

Для обновленя полей алкогольной продукции в теле запроса на обновление товара должен присутствовать объект **alcoholic**,
с вложенными в него полями, отражающими свойства алкогольной продукции:
+ **excise** - Содержит акцизную марку
+ **type**  - Код вида продукции
+ **strength** - Крепость
+ **volume** - Объём тары
Если в запросе на обновление товара, являющегося алкогольной продукцией, передать пустой объект **alcoholic**, с данного объекта
снимется отметка "Алкогольная продукция". Для того чтобы сделать товар, не являющийся алкогольной продукцией алкогольным, нужно в теле запроса
передать объект **alcoholic**, у которого хотя бы одно из свойств будет иметь значение.

При обновлении товара с указанным в теле запроса массивом штрихкодов, каждый штрихкод проходит проверку
на то, к какому типу он относится EAN 8, EAN 13. Если же штрихкод не относится ни к одному из этих
2 типов, он записывается как штрихкод типа Code 128. Переданный массив штрихкодов полностью заменяет предыдущий массив штрихкодов.
При обновлении товара отсутствует возможность указать штрихкод в массиве штрихкодов, который будет иметь тип UPC. Данное поведение является
 ограничением JSON API 1.1

При включенном в основном интерфейсе серийном учёте товаров, в запросе на обновление нельзя передать значение true полю **weighed**,
иначе возникнет ошибка, т.к. невозможен серийный учёт весовых товаров.

+ Request Пример (application/json)
Пример запроса на обновление Товара
  + Body
        <!-- include(body/product/put_request.json) -->

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление обновлённого Товара.
  + Body
        <!-- include(body/product/put_response.json) -->

+ Request Пример с доп. полями (application/json)
Пример запроса на изменение Товара с дополнительными полями.
  + Body
        <!-- include(body/product/put_with_attributes_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление обновлённого Товара.
  + Body
        <!-- include(body/product/put_with_attributes_response.json) -->

+ Request Пример с упаковками товаров (application/json)
Пример запроса на изменение Товара с упаковками.
  + Body
        <!-- include(body/product/put_with_goodpack_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление обновлённого Товара.
  + Body
        <!-- include(body/product/put_with_goodpack_response.json) -->



# Data Structures

## Product (object)
###Properties
+ meta:(MetaRef, optional) - Метаданные
+ id: `24124124-4124-4124124` (string, optional) - ID в формате UUID
+ accountId: `121252-12412-4124141-24124`(string, optional) - ID учетной записи
+ version: 1(string, optional) - Версия сущности
+ updated: `2016-04-04 12:20:10`(string, optional) - Момент последнего обновления сущности
+ deleted: `2016-04-04 12:20:10`(string, optional) - Момент последнего удаления сущности
+ name: Товар1 (string, optional) - Имя Товара
+ description: Это Товар 1(string, optional) - Описание Товара
+ code: 124(string, optional) - Код
+ externalCode: 456(string, optional)
+ archived: true (boolean, optional) - Добавлен ли Товар в архив
+ pathName: Группа1 (string, optional) - Наименование группы, в которую входит Товар
+ vat: 10 (string, optional) - НДС %
+ effectiveVat: 10 (string, optional)- Реальный НДС %
+ productFolder(MetaRef, optional) - Ссылка на сущность группы Товаров
+ uom: шт (string, optional) - Единицы измерения
+ image: (Image, optional, fixed)
+ minPrice: (object, optional) - Минимальная цена
+ buyPrice: (object, optional) - Цена закупки
+ salePrices: (array[Sale Price], optional) - Цена продажи
+ supplier: (MetaRef, optional) - Контрагент-поставщик
+ attributes: (Meta, optional) - Ссылка на атрибуты Товара
+ article: АР123 (string, optional) - Артикул
+ weight: 200(number, optional) - Вес
+ volume: 300 (number, optional) - Объём
+ packs: (Meta, optional) - Ссылка на упаковки Товара

## Product List
###Properties
+ context: (Context, required)
+ meta: (Meta, required)
+ rows: (array[Product], required, fixed) - Массив Товаров

## Product request long (object)
+ name: myName (string, required) - Наименование Товара
+ code: one1 (string, optional) - Код
+ externalCode: 456 (string, optional) - Внешний код
+ description: best CP ever(string, optional) - Описание Товара
+ vat: (string, optional) - НДС %
+ uom: см (string, optional) - Единицы измерения
+ weight: 200 (number, optional) - Вес
+ volume: 300 (number, optional) - Объём

## Product request short (object)
+ name:   myName (string, required) - Наименование Товара

## Product pack (object)
+ meta:(MetaRef, optional) - Метаданные
+ id: `24124124-4124-4124124` (string, optional) - ID в формате UUID
+ accountId: `121252-12412-4124141-24124`(string, optional) - ID учетной записи
+ uom: шт (string, optional) - Единицы измерения
+ quantity: 12 (number, optional) - Количество Товаров в упаковке

## Product Attribute (object)
+ meta: (MetaRef, optional) - Метаданные
+ name: (string) - Наименование поля
+ type: (string) - Тип поля
+ value: (string) - Значение поля (типа, указанного в type)

## Attributes List
###Properties
+ context: (Context, required)
+ meta: (Meta, required)
+ rows: (array[Product Attribute], required, fixed) - Массив Атрибутов

## Attributes Update request
### Properties
+ id: `24124124-4124-4124124` (string, required) - ID в формате UUID
+ name: `attribute_name` (string, optional) - Наименование Атрибута Товара
+ value: 230 (number, required) - Новое значение Атрибута

## Packs Update request
### Properties
+ id: `d1a58cc2-ffe7-11e5-9464-e4de00000019` (string, required) - ID в формате UUID
+ uom: Пак (string, optional) - Единицы измерения
+ quantity: 12 (number, optional) - Количество Товаров в упаковке

## Packs List
####Properties
+ context: (Context, required)
+ meta: (Meta, required)
+ rows: (array[Product pack], required, fixed) - Массив упаковок
