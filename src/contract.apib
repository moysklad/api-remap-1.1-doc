# Group Договор
## Договоры [/entity/contract]
Средствами JSON API можно создавать и обновлять сведения о Договорах, запрашивать списки Договоров и сведения по отдельным Договорам. Кодом сущности для Договора в составе JSON API является ключевое слово **contract**. Больше о Договорах и работе с ними в основном интерфейсе вы можете прочитать в нашей службе поддержки по [этой ссылке](https://support.moysklad.ru/hc/ru/articles/218121398-%D0%A3%D1%87%D0%B5%D1%82-%D0%B4%D0%BE%D0%B3%D0%BE%D0%B2%D0%BE%D1%80%D0%BE%D0%B2).
По данной сущности можно осуществлять контекстный поиск с помощью специального параметра `search`. Подробнее можно узнать по [ссылке](#header-контекстный-поиск). Поиск с параметром search отличается от других тем, что поиск не префиксный, без токенизации и идет только по одному полю одновременно. Ищет такие строки, в которые входит значение строки поиска.

Поиск среди объектов Договора на соответствие поисковой строке будет осуществлён по следующим полям:
+ по номеру Договора **name**
+ по комментарию к Договору **description**

### Атрибуты сущности
+ **meta** - [Метаданные](#header-метаданные) о Заказе Покупателя
+ **id** - ID в формате UUID `Только для чтения`
+ **accountId** - ID учетной записи `Только для чтения`
+ **owner** - Ссылка на Владельца (Сотрудника) в формате [Метаданных](#header-метаданные)
+ **shared** - Общий доступ
+ **group** - Отдел сотрудника в формате [Метаданных](#header-метаданные)
+ **version** - Версия сущности `Только для чтения`
+ **updated** - Момент последнего обновления сущности `Только для чтения`
+ **name** - номер Договора
+ **description** - Комментарий к Договору
+ **code** - Код Договора
+ **externalCode** - Внешний код Договора
+ **archived** - Добавлен ли Договор в архив
+ **moment** - Дата Договора
+ **sum** - Сумма Договора
+ **contractType** - Тип Договора. Возможные значения: `Договор комиссии`, `Договор купли-продажи`
+ **rewardType** - Тип Вознаграждения. Возможные значения: `Процент от суммы продажи`, `Не рассчитывать`
+ **rewardPercent** - Вознаграждение в процентах (от 0 до 100).
+ **ownAgent** - Ссылка на ваше юрлицо в формате [Метаданных](#header-метаданные)
+ **agent** - Ссылка на Контрагента в формате [Метаданные](#header-метаданные)
+ **state** - Статус договора в формате [Метаданных](#header-метаданные)
+ **organizationAccount** - Ссылка на счёт вашего юрлица в формате [Метаданных](#header-метаданные)
+ **agentAccount** - Ссылка на счёт контрагента в формате [Метаданных](#header-метаданные)
+ **rate** - Ссылка на валюту
+ **attributes** - Коллекция доп. полей в формате [Метаданных](#header-метаданные)

Таблица полей, их значений и их значений в JSON представлении:

| Имя поля     | Возможные Значения      | Соответствующее значение в JSON| Значение по умолчанию |
| :-----------:|:-----------------------:|:------------------------------:|:---------------------:|
|**contractType**  | Договор комиссии        |Commission                      | Договор купли-продажи |
|              | Договор купли-продажи   |Sales                           |                       |
| **rewardType**   | Процент от суммы продажи|PercentOfSales                  |    Не рассчитывать    |
|              | Не рассчитывать         |None                            |                       |

<!-- include(rate.apib) -->

О работе с доп. полями Договоров можно прочитать [здесь](#header-работа-с-дополнительными-полями)

### Атрибуты доступные для фильтрации
+ **id** - ID в формате UUID
+ **owner** - Ссылка на Владельца (Сотрудника)
+ **shared** - Общий доступ
+ **group** - Отдел сотрудника
+ **version** - Версия сущности
+ **updated** - Момент последнего обновления сущности
+ **updatedBy** - Автор последнего обновления сущности в формате `uid` (`admin@admin`)
+ **name** - номер Договора
+ **description** - Комментарий к Договору
+ **code** - Код Договора
+ **externalCode** - Внешний код Договора
+ **archived** - Добавлен ли Договор в архив
+ **moment** - Дата Договора,
+ **ownAgent** - Ссылка на ваше юрлицо
+ **agent** - Ссылка на Контрагента
+ **state** - Статус договора

### Атрибуты доступные для сортировки
+ **id** - ID в формате UUID
+ **version** - Версия сущности
+ **updated** - Момент последнего обновления сущности
+ **name** - номер Договора
+ **description** - Комментарий к Договору
+ **code** - Код Договора
+ **externalCode** - Внешний код Договора
+ **archived** - Добавлен ли Договор в архив
+ **moment** - Дата Договора

### Получить список Договоров [GET]
Запрос на получение списка всех договоров на данной учётной записи.
Результат: Объект JSON, включающий в себя поля:
- **meta** [Метаданные](#header-метаданные) о выдаче,
- **context** - [Метаданные](#header-метаданные) о сотруднике, выполнившем запрос.
- **rows** - Массив JSON объектов, представляющих собой Договоры.

+ Parameters
  + limit: 100 (optional, enum[number])
  Максимальное количество сущностей для извлечения.
  <p>
    <code>Допустимые значения 1 - 100</code>
  </p>
      + Default: `25`
  + offset: 40 (optional, number)
    Отступ в выдаваемом списке сущностей
      + Default: `0`

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление списка Договоров.
  + Body
        <!-- include(body/contract/get_list.json) -->

### Создать новый Договор [POST]
Запрос на создание нового Договора.
Обязательные для создания Договора поля:
+ **name** - Номер Договора, если не будет указан, будет сгенерирован автоматически
+ **ownAgent** - Ссылка на ваше юрлицо в формате [Метаданных](#header-метаданные)
+ **agent** - Ссылка на Контрагента в формате [Метаданные](#header-метаданные)


+ Request Пример 1 (application/json)
Пример создания нового Договора, с запросом, Тело которого содержит только обязательные поля.
  + Body
        <!-- include(body/contract/post_short_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного Договора.
  + Body
        <!-- include(body/contract/post_short_response.json) -->

+ Request Пример 2 (application/json)
Пример создания нового Договора с более насыщенным телом запроса.
  + Body
        <!-- include(body/contract/post_long_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного Договора.
  + Body
        <!-- include(body/contract/post_long_response.json) -->

+ Request Пример с доп. полями (application/json)
Пример создания нового Договора, с запросом, Тело которого содержит дополнительные поля.
  + Body
        <!-- include(body/contract/post_with_attributes_request.json) -->
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление созданного Договора.
  + Body
        <!-- include(body/contract/post_with_attributes_response.json) -->

### Удалить договор [DELETE /entity/contract/{id}]
Запрос на удаление Договора с указанным id.
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Договора

+ Response 200 (application/json)
Успешное удаление Договора.
  + Body

## Метаданные Договоров [/entity/contract/metadata]
### Метаданные Договоров [GET]
Запрос на получение метаданных Договоров. Результат - объект JSON, включающий в себя:
+ **meta** - Ссылка на метаданные Договоров
+ **attributes** - Массив объектов доп. полей Договоров в формате [Метаданных](#header-метаданные)
+ **states** - Массив статусов Договоров
+ **createShared** - создавать новые Договора с меткой "Общий"

Структура отдельного объекта, представляющего доп. поле подробно описана в разделе [Работа с дополнительными полями](#header-работа-с-дополнительными-полями).

+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление доп. полей Договоров.
  + Body
        <!-- include(body/contract/get_metadata.json) -->

## Отдельное доп. поле [/entity/contract/metadata/attributes/{id}]
+ Parameters
  + id: `5290a290-0313-11e6-9464-e4de00000020` (required, string) - id Доп. поля
### Отдельное доп. поле [GET]
Запрос на получение информации по отдельному дополнительному полю.
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление отдельного доп. поля.
  + Body
        <!-- include(body/contract/metadata_by_id.json) -->

## Договор [/entity/contract/{id}]
+ Parameters
  + id: `7944ef04-f831-11e5-7a69-971500188b19` (required, string) - id Договора
### Получить Договор [GET]
Запрос на получение отдельного Договора с указанным id.
+ Response 200 (application/json)
Успешный запрос. Результат - JSON представление Договора.
  + Body
        <!-- include(body/contract/get_by_id.json) -->

### Изменить Договор [PUT]
Запрос на обновление отдельного Договора с указанным id.
При обновлении полей **organization** и **agent** нужно также обновить поля **organizationAccount** и
**agentAccount** соответственно, иначе произойдёт ошибка.

+ Request Пример (application/json)
Пример запроса на обновление отдельного Договора.
  + Body
        <!-- include(body/contract/put_request.json) -->
+ Response 200 (application/json)
Удачный запрос. Результат - JSON представление обновлённого Договора.
  + Body
        <!-- include(body/contract/put_response.json) -->

+ Request Пример с доп полями(application/json)
Пример запроса на обновление отдельного Договора с телом запроса, содержащим доп. поля.
  + Body
        <!-- include(body/contract/put_with_attributes_request.json) -->
+ Response 200 (application/json)
Удачный запрос. Результат - JSON представление обновлённого Договора.
  + Body
        <!-- include(body/contract/put_with_attributes_response.json) -->

# Data Structures

## Contract (Legendable Entity)
+ moment: (string, required) - Дата договора
+ sum: (number, required ) - Сумма договора
+ contractType: (string, required) - Тип договора
+ rewardType: (string, required) - Тип вознаграждения
+ rewardPercent: (number, required) - Вознаграждение
+ ownAgent: (MetaRefWithMetaData, required)
+ agent: (MetaRefWithMetaData, required)

## Contract List (object)
+ context: (Context, required)
+ meta: (Meta, required)
+ rows: (array[Contract], required, fixed) - Массив Договоров
